% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perl.oneliner.R
\name{perl.oneliner}
\alias{perl.oneliner}
\title{execute a perl one liner}
\usage{
perl.oneliner(cmds, files, intern = FALSE, debug = FALSE)
}
\arguments{
\item{cmds}{a character vector of commands}

\item{files}{a character vector of paths to files. It is recyled to match the length
of cmds}

\item{intern}{logical: capture the output of the command as an R character vector?}

\item{debug}{logical: if \code{TRUE}, print the oneliner command before executing it}
}
\value{
nothing
}
\description{
execute a perl one liner, such as a regex search & replace (which is how
i most often use this), eg \code{s|^.+\\t||} and execute it on the
cmdline.
}
\details{
you can pass in multiple commands (such as multiple regex search/replace strings) applied
to one or multiple files.
i've tested the usage of multiple regex commands applied to a single file.

commands
The commands vector can either contain the leading perl command, eg
\code{perl.oneliner("perl -pi -e 's|<DTG|\n  <DTG|g'", file)}\cr
or just a pattern, eg\cr
\code{perl.oneliner("'s|<DTG|\n  <DTG|g'", file)}\cr
in which case we will add the leading \code{perl -pi -e }
}
\author{
Mark Cowley
}

